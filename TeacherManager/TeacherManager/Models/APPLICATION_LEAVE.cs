//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TeacherManager.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;

    public partial class APPLICATION_LEAVE
    {
        public int ID { get; set; }
        public Nullable<int> ID_TEACHER { get; set; }
        [DisplayName("Ngày bắt đầu")]
        [Required(ErrorMessage = "Vui lòng chọn ngày bắt đầu!")]
        [CustomValidation(typeof(APPLICATION_LEAVE), "IsValidStartDate")]
       
        public Nullable<System.DateTime> DATESTART { get; set; }
       
        [DisplayName("Lý do")]
        [Required(ErrorMessage = "Vui lòng nhập lý do!")]
        [RegularExpression("^[^\\d]+$", ErrorMessage ="Vui lòng một chuỗi!")]
        public string REASON { get; set; }
        [DisplayName("Tình trạng")]
        public string STATUS { get; set; }
        [DisplayName("Ngày kết thúc")]
        [CustomValidation(typeof(APPLICATION_LEAVE), "IsValidEndDate")]
        [Required(ErrorMessage = "Vui lòng chọn ngày kết thúc!")]
        public Nullable<System.DateTime> DATEEND { get; set; }
        [DisplayName("Hình thức nghỉ")]
        [Required(ErrorMessage = "Vui lòng nhập hình thức nghỉ!")]
        public string TYPELEAVE { get; set; }
        public virtual TEACHER TEACHER { get; set; }
        public static ValidationResult IsValidStartDate(DateTime? dateStart, ValidationContext validationContext)
        {
            if (dateStart.HasValue)
            {
                if (dateStart.Value < DateTime.Today.AddDays(7))
                {
                    return new ValidationResult("Ngày bắt đầu phải từ tuần sau trở đi!");
                }
            }

            return ValidationResult.Success;
        }
        public static ValidationResult IsValidEndDate(DateTime? dateEnd, ValidationContext validationContext)
        {
            var applicationLeave = (APPLICATION_LEAVE)validationContext.ObjectInstance;
            if (dateEnd.HasValue && applicationLeave.DATESTART.HasValue)
            {
                if (dateEnd.Value < applicationLeave.DATESTART.Value)
                {
                    return new ValidationResult("Ngày kết thúc phải lớn hơn hoặc bằng ngày bắt đầu!");
                }
            }

            return ValidationResult.Success;
        }
    }
}
